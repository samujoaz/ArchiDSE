digraph my_graph {
  overlap = scale;
   main[label="main"];
   slice1[label="slice1"];
   slice2[label="slice2"];
   filter1[label="filter1"];
   filter2[label="filter2"];
   write_buffer[label="write_buffer"];
   generator[label="generator"];
   cypher[label="cypher"];
   coder[label="coder"];
   modulator[label="modulator"];
   void1[label="void1"];
   void2[label="void2"];
   void3[label="void3"];
   void4[label="void4"];
   snk[label="snk"];
   timer_manager[label="timer_manager"];
   t1[label="t1",shape=box ];
   t2[label="t2",shape=box ];
   t3[label="t3",shape=box ];
   t4[label="t4",shape=box ];
   t5[label="t5",shape=box ];
   timer_manager -> t1[label="", color=red];
   timer_manager -> t2[label="", color=red];
   timer_manager -> t3[label="", color=red];
   timer_manager -> t4[label="", color=red];
   timer_manager -> t5[label="", color=red];
   timer_manager -> t1[label="", color=red];
   timer_manager -> t2[label="", color=red];
   timer_manager -> t3[label="", color=red];
   timer_manager -> t4[label="", color=red];
   timer_manager -> t5[label="", color=red];
   t1 -> main[label="PU0", color=blue];
   main -> slice1[label="PU1", color=blue];
   main -> slice2[label="PU2", color=blue];
   slice1 -> filter1[label="PU1", color=blue];
   slice2 -> filter2[label="PU2", color=blue];
   filter1 -> main[label="PU0", color=blue];
   filter2 -> main[label="PU1", color=blue];
   main -> write_buffer[label="PU1", color=blue];
   t2 -> generator[label="PU1", color=blue];
   t3 -> generator[label="PU2", color=blue];
   t4 -> generator[label="PU3", color=blue];
   t5 -> generator[label="PU0", color=blue];
   generator -> cypher[label="PU1", color=blue];
   generator -> cypher[label="PU2", color=blue];
   generator -> cypher[label="PU3", color=blue];
   generator -> cypher[label="PU0", color=blue];
   cypher -> coder[label="PU1", color=blue];
   cypher -> coder[label="PU2", color=blue];
   cypher -> coder[label="PU3", color=blue];
   cypher -> coder[label="PU0", color=blue];
   coder -> modulator[label="PU1", color=blue];
   coder -> modulator[label="PU2", color=blue];
   coder -> modulator[label="PU3", color=blue];
   coder -> modulator[label="PU0", color=blue];
   modulator -> snk[label="PU1", color=blue];
   modulator -> snk[label="PU2", color=blue];
   modulator -> snk[label="PU3", color=blue];
   modulator -> snk[label="PU0", color=blue];
   snk -> void1[label="PU3", color=blue];
   snk -> void2[label="PU2", color=blue];
   snk -> void3[label="PU2", color=blue];
   snk -> void4[label="PU2", color=blue];
}
